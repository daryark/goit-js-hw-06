// //task –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ –æ—á–∏—â–µ–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç—ñ–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–≤–æ–¥–∏—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –≤ input —ñ –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É –°—Ç–≤–æ—Ä–∏—Ç–∏, –ø—ñ—Å–ª—è —á–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –∫–æ–ª–µ–∫—Ü—ñ—è. –ù–∞—Ç–∏—Å–Ω–µ–Ω–Ω—è–º –Ω–∞ –∫–Ω–æ–ø–∫—É –û—á–∏—Å—Ç–∏—Ç–∏, –∫–æ–ª–µ–∫—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –æ—á–∏—â–∞—î—Ç—å—Å—è.
// //f.e –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é createBoxes(amount), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - —á–∏—Å–ª–æ. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î —Å—Ç—ñ–ª—å–∫–∏ <div>, —Å–∫—ñ–ª—å–∫–∏ –≤–∫–∞–∑–∞–Ω–æ –≤ amount —ñ –¥–æ–¥–∞—î —ó—Ö —É div#boxes.

// //f.e –†–æ–∑–º—ñ—Ä–∏ –Ω–∞–π–ø–µ—Ä—à–æ–≥–æ <div> - 30px –Ω–∞ 30px.
// //f.e –ö–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —à–∏—Ä—à–∏–º —ñ –≤–∏—â–∏–º –≤—ñ–¥ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –Ω–∞ 10px.
// //f.e –í—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–π –∫–æ–ª—ñ—Ä —Ñ–æ–Ω—É —É —Ñ–æ—Ä–º–∞—Ç—ñ HEX. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –≥–æ—Ç–æ–≤—É —Ñ—É–Ω–∫—Ü—ñ—é getRandomHexColor –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É.

// //f.e –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é destroyBoxes(), —è–∫–∞ –æ—á–∏—â–∞—î –≤–º—ñ—Å—Ç div#boxes, —É —Ç–∞–∫–∏–π —Å–ø–æ—Å—ñ–± –≤–∏–¥–∞–ª—è—é—á–∏ –≤—Å—ñ —Å—Ç–≤–æ—Ä–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏.

function getRandomHexColor() {
	return `#${Math.floor(Math.random() * 16777215).toString(16)}`;
}

const inputEl = document.querySelector('input[type = "number"]');
const createBtn = document.querySelector("[data-create]");
const destroyBtn = document.querySelector("[data-destroy]");
const containerEl = document.querySelector("#boxes");

let boxSize = 30;
let inputElValue = 0;

inputEl.addEventListener("change", (e) => (inputElValue = Number(e.target.value)));
//in eventListener function you can add only one argument - event, so if you need any other argument, then make callback inside the function üëá
createBtn.addEventListener("click", () => createBoxes(inputElValue));
destroyBtn.addEventListener("click", destroyBoxes);

function createBoxes(amount) {
	const elementsArr = [];

	if (!containerEl.lastElementChild) {
		boxSize = 30;
	}

	for (let i = 0; i < amount; i += 1) {
		elementsArr.push(
			`<div style = "width: ${boxSize}px; height: ${boxSize}px; background-color: ${getRandomHexColor()}"></div>`
		);
		boxSize += 10;
	}

	return containerEl.insertAdjacentHTML("beforeend", elementsArr.join(""));
}

function destroyBoxes() {
	if (containerEl.children.length > 0) {
		containerEl.innerHTML = "";
	}
}
